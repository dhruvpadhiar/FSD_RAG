import Link from "next/link"
import { ArrowRight, FileText, MessageSquare, Shield, Zap } from "lucide-react"
import { Button } from "@/components/ui/button"

export default function LandingPage() {
  return (
    <div className="min-h-screen flex flex-col">
      {/* Navbar */}
      <header className="border-b bg-white/80 dark:bg-gray-950/80 backdrop-blur-md sticky top-0 z-50 transition-all duration-300">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center gap-2">
            <FileText className="h-6 w-6 text-primary" />
            <span className="font-bold text-xl">PDFChat</span>
          </div>
          <div className="flex items-center gap-4">
            <Link href="/login" className="text-sm font-medium hover:text-primary transition-all duration-300">
              Login
            </Link>
            <Link href="/signup">
              <Button className="transition-all duration-300 hover:scale-105">Get Started</Button>
            </Link>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 md:py-32 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-primary/5 to-primary/10 dark:from-primary/10 dark:to-primary/5 -z-10 transition-all duration-300" />
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] bg-primary/5 rounded-full blur-3xl -z-10" />

        <div className="container mx-auto px-4 flex flex-col items-center text-center">
          <div className="inline-flex items-center px-3 py-1 rounded-full bg-primary/10 text-primary text-sm font-medium mb-6 animate-fade-in">
            <span className="relative flex h-2 w-2 mr-2">
              <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary opacity-75"></span>
              <span className="relative inline-flex rounded-full h-2 w-2 bg-primary"></span>
            </span>
            Intelligent PDF Chat Assistant
          </div>

          <h1 className="text-4xl md:text-6xl font-bold tracking-tight mb-6 max-w-4xl animate-fade-in-up">
            Chat with your <span className="text-primary">PDF documents</span> using AI
          </h1>

          <p
            className="text-lg text-gray-600 dark:text-gray-300 mb-10 max-w-2xl animate-fade-in-up"
            style={{ animationDelay: "0.2s" }}
          >
            Upload your PDFs and instantly start asking questions. Get accurate answers powered by advanced AI that
            understands your documents.
          </p>

          <div className="flex flex-col sm:flex-row gap-4 mb-16 animate-fade-in-up" style={{ animationDelay: "0.3s" }}>
            <Link href="/signup">
              <Button size="lg" className="group w-full sm:w-auto transition-all duration-300 hover:shadow-lg">
                Get Started Free
                <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
              </Button>
            </Link>
            <Link href="/login">
              <Button
                size="lg"
                variant="outline"
                className="w-full sm:w-auto transition-all duration-300 hover:shadow-md"
              >
                Login to Dashboard
              </Button>
            </Link>
          </div>

          <div
            className="relative w-full max-w-4xl mx-auto rounded-xl overflow-hidden shadow-2xl group animate-fade-in-up"
            style={{ animationDelay: "0.4s" }}
          >
            <div className="absolute inset-0 bg-gradient-to-r from-primary/20 to-primary/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500 z-10"></div>
            <img
              src="/placeholder.svg?height=600&width=1200"
              alt="PDFChat Dashboard Preview"
              className="w-full h-auto rounded-xl transform group-hover:scale-[1.02] transition-transform duration-500"
            />
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-white dark:bg-gray-950 transition-all duration-300">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent">
              Powerful Features
            </h2>
            <p className="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto transition-all duration-300">
              Everything you need to interact with your PDF documents intelligently
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              {
                icon: <FileText className="h-10 w-10 text-primary" />,
                title: "PDF Processing",
                description: "Upload multiple PDFs and our system will process them for instant querying.",
              },
              {
                icon: <MessageSquare className="h-10 w-10 text-primary" />,
                title: "Intelligent Chat",
                description: "Ask questions in natural language and get accurate answers from your documents.",
              },
              {
                icon: <Zap className="h-10 w-10 text-primary" />,
                title: "Instant Responses",
                description: "Get immediate answers with our high-performance AI processing engine.",
              },
              {
                icon: <Shield className="h-10 w-10 text-primary" />,
                title: "Secure Processing",
                description: "Your documents are processed securely and never shared with third parties.",
              },
              {
                icon: <FileText className="h-10 w-10 text-primary" />,
                title: "Document History",
                description: "Access your previously uploaded documents and conversations anytime.",
              },
              {
                icon: <MessageSquare className="h-10 w-10 text-primary" />,
                title: "Contextual Understanding",
                description: "Our AI understands the context of your questions for more accurate answers.",
              },
            ].map((feature, index) => (
              <div
                key={index}
                className="bg-white dark:bg-gray-900 p-6 rounded-xl border border-gray-200 dark:border-gray-800 hover:border-primary/50 dark:hover:border-primary/50 hover:shadow-lg transition-all duration-300 group animate-fade-in-up"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                <div className="mb-4 p-3 rounded-lg bg-primary/10 inline-block group-hover:bg-primary/20 transition-all duration-300">
                  {feature.icon}
                </div>
                <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
                <p className="text-gray-600 dark:text-gray-300 transition-all duration-300">{feature.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-br from-primary/10 to-primary/5 dark:from-primary/20 dark:to-primary/10 transition-all duration-300">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-4 animate-fade-in-up">Ready to chat with your PDFs?</h2>
          <p
            className="text-lg text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto transition-all duration-300 animate-fade-in-up"
            style={{ animationDelay: "0.1s" }}
          >
            Join thousands of users who are already getting answers from their documents instantly.
          </p>
          <Link href="/signup">
            <Button
              size="lg"
              className="group transition-all duration-300 hover:shadow-lg animate-fade-in-up"
              style={{ animationDelay: "0.2s" }}
            >
              Get Started Now
              <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
            </Button>
          </Link>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-50 dark:bg-gray-900 py-12 mt-auto transition-all duration-300">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="flex items-center gap-2 mb-4 md:mb-0">
              <FileText className="h-5 w-5 text-primary" />
              <span className="font-bold text-lg">PDFChat</span>
            </div>
            <div className="text-sm text-gray-500 dark:text-gray-400 transition-all duration-300">
              Â© {new Date().getFullYear()} PDFChat. All rights reserved.
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}

this is '/'

connect them with login , signup 
"use client"

import { useState } from "react"
import { ArrowLeft, FileText, Loader2 } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"

export default function LoginPage() {
  const [email, setEmail] = useState("")
  const [password, setPassword] = useState("")
  const [isLoading, setIsLoading] = useState(false)
  const [error, setError] = useState("")

  const handleLogin = async (e) => {
    e.preventDefault()
    setError("")

    if (!email || !password) {
      setError("Please fill in all fields")
      return
    }

    setIsLoading(true)

    // Simulate API call - in a real app, you would use axios here
    try {
      // For now, we'll simulate a successful login
      setTimeout(() => {
        setIsLoading(false)
        // Navigate to chat page on successful login
      }, 1500)
    } catch (error) {
      setIsLoading(false)
      setError("Login failed. Please check your credentials.")
    }
  }

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-primary/5 to-primary/10 dark:from-primary/10 dark:to-primary/5 p-4 transition-all duration-300">
      <Link
        href="/"
        className="absolute top-8 left-8 flex items-center text-sm font-medium text-gray-600 dark:text-gray-300 hover:text-primary transition-all duration-300 group"
      >
        <ArrowLeft className="mr-2 h-4 w-4 group-hover:-translate-x-1 transition-transform" />
        Back to Home
      </Link>

      <div className="w-full max-w-md">
        <div className="flex justify-center mb-8 animate-fade-in-down">
          <div className="flex items-center gap-2">
            <FileText className="h-6 w-6 text-primary" />
            <span className="font-bold text-2xl">PDFChat</span>
          </div>
        </div>

        <Card className="w-full shadow-lg border-primary/10 animate-fade-in-up dark:border-primary/20 dark:bg-gray-900 transition-all duration-300">
          <CardHeader>
            <CardTitle className="text-2xl text-center">Welcome back</CardTitle>
            <CardDescription className="text-center dark:text-gray-400 transition-all duration-300">
              Enter your credentials to access your account
            </CardDescription>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleLogin} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="email" className="dark:text-gray-300 transition-all duration-300">
                  Email
                </Label>
                <Input
                  id="email"
                  type="email"
                  placeholder="you@example.com"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className="transition-all duration-300 focus:ring-2 focus:ring-primary/20 dark:bg-gray-800 dark:border-gray-700"
                  required
                />
              </div>
              <div className="space-y-2">
                <div className="flex items-center justify-between">
                  <Label htmlFor="password" className="dark:text-gray-300 transition-all duration-300">
                    Password
                  </Label>
                  <Link href="#" className="text-xs text-primary hover:underline">
                    Forgot password?
                  </Link>
                </div>
                <Input
                  id="password"
                  type="password"
                  placeholder="â¢â¢â¢â¢â¢â¢â¢â¢"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  className="transition-all duration-300 focus:ring-2 focus:ring-primary/20 dark:bg-gray-800 dark:border-gray-700"
                  required
                />
              </div>

              {error && <div className="text-sm text-red-500 mt-2 animate-fade-in">{error}</div>}

              <Button type="submit" className="w-full transition-all duration-300 hover:shadow-md" disabled={isLoading}>
                {isLoading ? (
                  <>
                    <Loader2 className="mr-2 h-4 w-4 animate-spin" />
                    Logging in...
                  </>
                ) : (
                  "Login"
                )}
              </Button>
            </form>
          </CardContent>
          <CardFooter className="flex justify-center">
            <div className="text-sm text-gray-500 dark:text-gray-400 transition-all duration-300">
              Don't have an account?{" "}
              <Link href="/signup" className="text-primary hover:underline">
                Sign up
              </Link>
            </div>
          </CardFooter>
        </Card>
      </div>
    </div>
  )
}

import Link from "next/link"

after login , signup 
display 
"use client"

import { useState, useEffect } from "react"
import { FileText, AlertCircle, CheckCircle } from "lucide-react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Alert, AlertDescription } from "@/components/ui/alert"
import ChatInterface from "@/components/chat-interface"
import FileUpload from "@/components/file-upload"
export default function PDFChatApp() {
  const [apiStatus, setApiStatus] = useState("checking")
  const [uploadStatus, setUploadStatus] = useState("idle")
  const [errorMessage, setErrorMessage] = useState(null)
  const [chatHistory, setChatHistory] = useState([])

  // Check API health on component mount
  useEffect(() => {
    const checkApiHealth = async () => {
      try {
        const controller = new AbortController()
        const timeoutId = setTimeout(() => controller.abort(), 5000)
        const response = await fetch("http://localhost:5000/api/health", { signal: controller.signal })
        clearTimeout(timeoutId)
        const data = await response.json()
        setApiStatus(data.status === "healthy" ? "healthy" : "down")
      } catch (error) {
        setApiStatus("down")
        setErrorMessage(
          error.name === "AbortError"
            ? "API request timed out"
            : "API is not available. Please ensure the server is running.",
        )
      }
    }

    checkApiHealth()
  }, [])

  return (
    <div className="container mx-auto py-8 px-4">
      <h1 className="text-3xl font-bold mb-8 text-center">PDF Chat Application</h1>

      {apiStatus === "down" && (
        <Alert variant="destructive" className="mb-6">
          <AlertCircle className="h-4 w-4" />
          <AlertDescription>
            {errorMessage || "API is not available. Please ensure the server is running."}
          </AlertDescription>
        </Alert>
      )}

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <Card className="md:col-span-1">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <FileText className="h-5 w-5" />
              PDF Management
            </CardTitle>
          </CardHeader>
          <CardContent>
            <FileUpload apiStatus={apiStatus} setUploadStatus={setUploadStatus} setErrorMessage={setErrorMessage} />

            {uploadStatus === "success" && (
              <div className="flex items-center gap-2 mt-4 text-green-600">
                <CheckCircle className="h-4 w-4" />
                <span>PDFs processed successfully!</span>
              </div>
            )}

            {uploadStatus === "error" && (
              <div className="flex items-center gap-2 mt-4 text-red-600">
                <AlertCircle className="h-4 w-4" />
                <span>{errorMessage || "Upload failed"}</span>
              </div>
            )}
          </CardContent>
        </Card>

        <Card className="md:col-span-2">
          <CardHeader>
            <CardTitle>Chat with your PDFs</CardTitle>
          </CardHeader>
          <CardContent>
            <ChatInterface
              apiStatus={apiStatus}
              uploadStatus={uploadStatus}
              chatHistory={chatHistory}
              setChatHistory={setChatHistory}
              setErrorMessage={setErrorMessage}
            />
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
/dashboard

give a logout button to link "/'

clean next dependencies for router 
make them in such way to work with react-router-dom 
for react js , tailwindv4 , shadcn , jsx

import { ArrowRight, FileText, MessageSquare, Shield, Zap } from "lucide-react"
import { Button } from "@/components/ui/button"

export default function LandingPage() {
  return (
    <div className="min-h-screen flex flex-col">
      {/* Navbar */}
      <header className="border-b bg-white/80 dark:bg-gray-950/80 backdrop-blur-md sticky top-0 z-50 transition-all duration-300">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center gap-2">
            <FileText className="h-6 w-6 text-primary" />
            <span className="font-bold text-xl">PDFChat</span>
          </div>
          <div className="flex items-center gap-4">
            <Link href="/login" className="text-sm font-medium hover:text-primary transition-all duration-300">
              Login
            </Link>
            <Link href="/signup">
              <Button className="transition-all duration-300 hover:scale-105">Get Started</Button>
            </Link>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="py-20 md:py-32 relative overflow-hidden">
        <div className="absolute inset-0 bg-gradient-to-br from-primary/5 to-primary/10 dark:from-primary/10 dark:to-primary/5 -z-10 transition-all duration-300" />
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] bg-primary/5 rounded-full blur-3xl -z-10" />

        <div className="container mx-auto px-4 flex flex-col items-center text-center">
          <div className="inline-flex items-center px-3 py-1 rounded-full bg-primary/10 text-primary text-sm font-medium mb-6 animate-fade-in">
            <span className="relative flex h-2 w-2 mr-2">
              <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-primary opacity-75"></span>
              <span className="relative inline-flex rounded-full h-2 w-2 bg-primary"></span>
            </span>
            Intelligent PDF Chat Assistant
          </div>

          <h1 className="text-4xl md:text-6xl font-bold tracking-tight mb-6 max-w-4xl animate-fade-in-up">
            Chat with your <span className="text-primary">PDF documents</span> using AI
          </h1>

          <p
            className="text-lg text-gray-600 dark:text-gray-300 mb-10 max-w-2xl animate-fade-in-up"
            style={{ animationDelay: "0.2s" }}
          >
            Upload your PDFs and instantly start asking questions. Get accurate answers powered by advanced AI that
            understands your documents.
          </p>

          <div className="flex flex-col sm:flex-row gap-4 mb-16 animate-fade-in-up" style={{ animationDelay: "0.3s" }}>
            <Link href="/signup">
              <Button size="lg" className="group w-full sm:w-auto transition-all duration-300 hover:shadow-lg">
                Get Started Free
                <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
              </Button>
            </Link>
            <Link href="/login">
              <Button
                size="lg"
                variant="outline"
                className="w-full sm:w-auto transition-all duration-300 hover:shadow-md"
              >
                Login to Dashboard
              </Button>
            </Link>
          </div>

          <div
            className="relative w-full max-w-4xl mx-auto rounded-xl overflow-hidden shadow-2xl group animate-fade-in-up"
            style={{ animationDelay: "0.4s" }}
          >
            <div className="absolute inset-0 bg-gradient-to-r from-primary/20 to-primary/10 opacity-0 group-hover:opacity-100 transition-opacity duration-500 z-10"></div>
            <img
              src="/placeholder.svg?height=600&width=1200"
              alt="PDFChat Dashboard Preview"
              className="w-full h-auto rounded-xl transform group-hover:scale-[1.02] transition-transform duration-500"
            />
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-white dark:bg-gray-950 transition-all duration-300">
        <div className="container mx-auto px-4">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-primary to-primary/70 bg-clip-text text-transparent">
              Powerful Features
            </h2>
            <p className="text-gray-600 dark:text-gray-300 max-w-2xl mx-auto transition-all duration-300">
              Everything you need to interact with your PDF documents intelligently
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              {
                icon: <FileText className="h-10 w-10 text-primary" />,
                title: "PDF Processing",
                description: "Upload multiple PDFs and our system will process them for instant querying.",
              },
              {
                icon: <MessageSquare className="h-10 w-10 text-primary" />,
                title: "Intelligent Chat",
                description: "Ask questions in natural language and get accurate answers from your documents.",
              },
              {
                icon: <Zap className="h-10 w-10 text-primary" />,
                title: "Instant Responses",
                description: "Get immediate answers with our high-performance AI processing engine.",
              },
              {
                icon: <Shield className="h-10 w-10 text-primary" />,
                title: "Secure Processing",
                description: "Your documents are processed securely and never shared with third parties.",
              },
              {
                icon: <FileText className="h-10 w-10 text-primary" />,
                title: "Document History",
                description: "Access your previously uploaded documents and conversations anytime.",
              },
              {
                icon: <MessageSquare className="h-10 w-10 text-primary" />,
                title: "Contextual Understanding",
                description: "Our AI understands the context of your questions for more accurate answers.",
              },
            ].map((feature, index) => (
              <div
                key={index}
                className="bg-white dark:bg-gray-900 p-6 rounded-xl border border-gray-200 dark:border-gray-800 hover:border-primary/50 dark:hover:border-primary/50 hover:shadow-lg transition-all duration-300 group animate-fade-in-up"
                style={{ animationDelay: `${index * 0.1}s` }}
              >
                <div className="mb-4 p-3 rounded-lg bg-primary/10 inline-block group-hover:bg-primary/20 transition-all duration-300">
                  {feature.icon}
                </div>
                <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
                <p className="text-gray-600 dark:text-gray-300 transition-all duration-300">{feature.description}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-br from-primary/10 to-primary/5 dark:from-primary/20 dark:to-primary/10 transition-all duration-300">
        <div className="container mx-auto px-4 text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-4 animate-fade-in-up">Ready to chat with your PDFs?</h2>
          <p
            className="text-lg text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto transition-all duration-300 animate-fade-in-up"
            style={{ animationDelay: "0.1s" }}
          >
            Join thousands of users who are already getting answers from their documents instantly.
          </p>
          <Link href="/signup">
            <Button
              size="lg"
              className="group transition-all duration-300 hover:shadow-lg animate-fade-in-up"
              style={{ animationDelay: "0.2s" }}
            >
              Get Started Now
              <ArrowRight className="ml-2 h-4 w-4 group-hover:translate-x-1 transition-transform" />
            </Button>
          </Link>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-50 dark:bg-gray-900 py-12 mt-auto transition-all duration-300">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between items-center">
            <div className="flex items-center gap-2 mb-4 md:mb-0">
              <FileText className="h-5 w-5 text-primary" />
              <span className="font-bold text-lg">PDFChat</span>
            </div>
            <div className="text-sm text-gray-500 dark:text-gray-400 transition-all duration-300">
              Â© {new Date().getFullYear()} PDFChat. All rights reserved.
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}
